diff --git a/pngrtran.c b/pngrtran.c
index 238f5afe7..c435e5f8d 100644
--- a/pngrtran.c
+++ b/pngrtran.c
@@ -1941,6 +1941,11 @@ png_read_transform_info(png_structrp png_ptr, png_inforp info_ptr)
 {
    png_debug(1, "in png_read_transform_info");
 
+   if (png_ptr->palette == NULL && info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
+   {
+      MAGMA_LOG("MAGMA_RECORD_png_read_transform_info", 1);
+   }
+
 #ifdef PNG_READ_EXPAND_SUPPORTED
    if ((png_ptr->transformations & PNG_EXPAND) != 0)
    {
@@ -1959,8 +1964,13 @@ png_read_transform_info(png_structrp png_ptr, png_inforp info_ptr)
          info_ptr->bit_depth = 8;
          info_ptr->num_trans = 0;
 
+#ifdef MAGMA_ENABLE_FIXES
          if (png_ptr->palette == NULL)
             png_error (png_ptr, "Palette is NULL in indexed image");
+#endif
+#ifdef MAGMA_ENABLE_CANARIES
+         MAGMA_LOG("%MAGMA_BUG%", png_ptr->palette == NULL);
+#endif
       }
       else
       {
diff --git a/pngset.c b/pngset.c
index 9f4489bcf..041f670a7 100644
--- a/pngset.c
+++ b/pngset.c
@@ -595,6 +595,10 @@ png_set_PLTE(png_structrp png_ptr, png_inforp info_ptr,
          return;
       }
    }
+   if ((num_palette > 0 && palette == NULL))
+   {
+      MAGMA_LOG("MAGMA_RECORD_png_set_PLTE", 1);
+   }
 
    if ((num_palette > 0 && palette == NULL) ||
       (num_palette == 0
@@ -603,7 +607,12 @@ png_set_PLTE(png_structrp png_ptr, png_inforp info_ptr,
 #        endif
       ))
    {
+#ifdef MAGMA_ENABLE_FIXES
       png_error(png_ptr, "Invalid palette");
+#else
+      png_chunk_report(png_ptr, "Invalid palette", PNG_CHUNK_ERROR);
+      return;
+#endif
    }
 
    /* It may not actually be necessary to set png_ptr->palette here;
