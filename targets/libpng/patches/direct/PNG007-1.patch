diff --git a/pngrtran.c b/pngrtran.c
index 238f5afe7..a00a63b2b 100644
--- a/pngrtran.c
+++ b/pngrtran.c
@@ -1959,8 +1959,13 @@ png_read_transform_info(png_structrp png_ptr, png_inforp info_ptr)
          info_ptr->bit_depth = 8;
          info_ptr->num_trans = 0;
 
+#ifdef MAGMA_ENABLE_FIXES
          if (png_ptr->palette == NULL)
             png_error (png_ptr, "Palette is NULL in indexed image");
+#endif
+#ifdef MAGMA_ENABLE_CANARIES
+         MAGMA_LOG("%MAGMA_BUG%", png_ptr->palette == NULL);
+#endif
       }
       else
       {
diff --git a/pngset.c b/pngset.c
index 9f4489bcf..311f21660 100644
--- a/pngset.c
+++ b/pngset.c
@@ -603,7 +603,12 @@ png_set_PLTE(png_structrp png_ptr, png_inforp info_ptr,
 #        endif
       ))
    {
+#ifdef MAGMA_ENABLE_FIXES
       png_error(png_ptr, "Invalid palette");
+#else
+      png_chunk_report(png_ptr, "Invalid palette", PNG_CHUNK_ERROR);
+      return;
+#endif
    }
 
    /* It may not actually be necessary to set png_ptr->palette here;
diff --git a/pngwrite.c b/pngwrite.c
index d2867a4b2..c7e07bdc4 100644
--- a/pngwrite.c
+++ b/pngwrite.c
@@ -1782,7 +1782,10 @@ png_image_set_PLTE(png_image_write_control *display)
    const void *cmap = display->colormap;
    int entries = image->colormap_entries > 256 ? 256 :
        (int)image->colormap_entries;
-
+   if (image->colormap_entries > 256)
+   {
+      MAGMA_LOG("MAGMA_RECORD_png_image_set_PLTE", 1);
+   }
    /* NOTE: the caller must check for cmap != NULL and entries != 0 */
    png_uint_32 format = image->format;
    unsigned int channels = PNG_IMAGE_SAMPLE_CHANNELS(format);
